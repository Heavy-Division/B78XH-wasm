//    B78XH-wasm
//    Copyright (C) 2022  Heavy Division
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program.  If not, see <https://www.gnu.org/licenses/>.


#pragma once

enum class SimEngineType {
	ENGINE_TYPE_PISTON,
	ENGINE_TYPE_JET,
	ENGINE_TYPE_NONE,
	ENGINE_TYPE_HELO_TURBINE,
	ENGINE_TYPE_ROCKET,
	ENGINE_TYPE_TURBOPROP
};

enum class SimPropellerType {
	PROPELLER_TYPE_CONSTANT_SPEED,
	PROPELLER_TYPE_FIXED_PITCH

};

enum class SimAircraft {
	CJ4,
	A320_NEO,
	B747_8,
	AS01B,
	AS02A,
	AS03D
};

enum class SimThrottleMode {
	UNKNOWN,
	REVERSE,
	IDLE,
	AUTO,
	CLIMB,
	FLEX_MCT,
	TOGA,
	HOLD
};

enum class SimAutopilotMode {
	MANAGED,
	SELECTED,
	HOLD
};

enum class SimMinimumReferenceMode {
	RADIO,
	BARO
};

enum class SimFlightState {
	FLIGHT_STATE_BRIEFING,
	FLIGHT_STATE_INTRO_PLANE,
	FLIGHT_STATE_INTRO,
	FLIGHT_STATE_PREFLIGHT_GATE,
	FLIGHT_STATE_PREFLIGHT_PUSHBACK,
	FLIGHT_STATE_PREFLIGHT_TAXI,
	FLIGHT_STATE_PREFLIGHT_HOLDSHORT,
	FLIGHT_STATE_FLIGHT_RUNWAY,
	FLIGHT_STATE_FLIGHT_INITIAL_CLIMB,
	FLIGHT_STATE_FLIGHT_CLIMB,
	FLIGHT_STATE_FLIGHT_CRUISE,
	FLIGHT_STATE_FLIGHT_DESCENT,
	FLIGHT_STATE_JOINPLANE,
	FLIGHT_STATE_LANDING_APPROACH,
	FLIGHT_STATE_LANDING_FINAL,
	FLIGHT_STATE_LANDING_TOUCHDOWN,
	FLIGHT_STATE_LANDING_GROUNDROLL,
	FLIGHT_STATE_LANDING_TAXI,
	FLIGHT_STATE_LANDING_GATE,
	FLIGHT_STATE_LANDING_REST,
	FLIGHT_STATE_OUTRO,
	FLIGHT_STATE_WAITING,
	FLIGHT_STATE_TELEPORTTOSTATE,
	FLIGHT_STATE_FREEFLIGHT,
	FLIGHT_STATE_LANDINGCHALLENGE,
	FLIGHT_STATE_BUSHTRIP
};

enum class SimFlightPhase {
	FLIGHT_PHASE_PREFLIGHT,
	FLIGHT_PHASE_TAXI,
	FLIGHT_PHASE_TAKEOFF,
	FLIGHT_PHASE_CLIMB,
	FLIGHT_PHASE_CRUISE,
	FLIGHT_PHASE_DESCENT,
	FLIGHT_PHASE_APPROACH,
	FLIGHT_PHASE_GOAROUND
};

enum class SimApproachType {
	APPROACH_TYPE_UNKNOWN,
	APPROACH_TYPE_GPS,
	APPROACH_TYPE_VOR,
	APPROACH_TYPE_NDB,
	APPROACH_TYPE_ILS,
	APPROACH_TYPE_LOCALIZER,
	APPROACH_TYPE_SDF,
	APPROACH_TYPE_LDA,
	APPROACH_TYPE_VORDME,
	APPROACH_TYPE_NDBDME,
	APPROACH_TYPE_RNAV,
	APPROACH_TYPE_LOCALIZER_BACK_COURSE
};

enum class SimRunwayDesignator {
	RUNWAY_DESIGNATOR_NONE,
	RUNWAY_DESIGNATOR_LEFT,
	RUNWAY_DESIGNATOR_RIGH,
	RUNWAY_DESIGNATOR_CENTER,
	RUNWAY_DESIGNATOR_WATER,
	RUNWAY_DESIGNATOR_A,
	RUNWAY_DESIGNATOR_B
};

enum class SimWorldRegion {
	NORTH_AMERICA,
	AUSTRALIA,
	HAWAII,
	OTHER
};

enum class SimNAV_AID_STATE {
	OFF,
	ADF,
	VOR
};

enum class SimNAV_AID_MODE {
	NONE,
	MANUAL,
	REMOTE,
};

